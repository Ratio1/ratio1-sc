{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1B2e177DeCD7d1fDd2A7Bda84eD530cDD3f36E09",
    "txHash": "0xcacf8f33e5e5a98b9aa013e5437159e8b5ece3d9f6646a9769a45e80c5d213d3"
  },
  "proxies": [
    {
      "address": "0x911A520bB6a5F332377D6f24448d8B761Bc1d990",
      "txHash": "0xe65964202179e497dc6b971394741033f9eac2e48dc567e474fe72a654fda1d8",
      "kind": "transparent"
    },
    {
      "address": "0x3026e13534f0E9A49520445761F42577989F3D31",
      "txHash": "0x12975667b5b3e71bc5a58990bf2e29138383de2bfd3900087199b6f20f1fdffb",
      "kind": "transparent"
    },
    {
      "address": "0xAb2F1F31489BAa339d58470737dD6E5d55484261",
      "txHash": "0x61b6a49c676d5935faa7cc7ed1c8ddd10d7204579fb833246874bdd8f4d2e0a9",
      "kind": "transparent"
    },
    {
      "address": "0xE658DF6dA3FB5d4FBa562F1D5934bd0F9c6bd423",
      "txHash": "0x31cfb84d2ce6e8a3ae0d77548f36b921ac67e791a0139cf583b3a1e1512177d8",
      "kind": "transparent"
    },
    {
      "address": "0x3814A2110f2269d773a90F5F24fdfE4cb89823ea",
      "txHash": "0x2c0f2a78a8e788dfc2eefb5d69f697fed528d7ff228e60e185518da2b0714974",
      "kind": "transparent"
    },
    {
      "address": "0x114f9995cc09cfc708533591cc93f2900Bb4997E",
      "txHash": "0xc45c43d18cbc1f0c7c2437e1695906b38b946706dfe35d2ea9430931195461c5",
      "kind": "transparent"
    },
    {
      "address": "0xa8d7FFCE91a888872A9f5431B4Dd6c0c135055c1",
      "txHash": "0x45fd113c197e252c0f5ed6e27256f52ddb8919eb796af5cd5b425cdadb6d307c",
      "kind": "transparent"
    },
    {
      "address": "0x18E86a5829CA1F02226FA123f30d90dCd7cFd0ED",
      "txHash": "0x26c5510ab00a785471fee6a35ad10da175a5738adc7b3d37450d980b224ca6df",
      "kind": "transparent"
    },
    {
      "address": "0x7A14Be75135a7ebdef99339CCc700C25Cda60c6E",
      "txHash": "0x68d839b2a2920853fe0a3d60ff52d476dfc6c210d9a35f3360b2dece169d941f",
      "kind": "transparent"
    },
    {
      "address": "0x8D0CE4933728FF7C04388f0bEcC9a45676E232F7",
      "txHash": "0xa78bcdf9375f21ac7226f28bd435ffc1e19dcab56815c88ecc042a51f11b9a10",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8b3c51fb518d413a3e8e7a6cf43775bd0ed59e625747e2ecb3ae3268587199bd": {
      "address": "0x8FC0ea2C656f4AC2C33045FfCD1b5cFc128dCBc9",
      "txHash": "0x8bd241f99bb4c2cea9ec20014ecd2c1d603756e23735e12d4e8d504f7a063d54",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)14395",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10371",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)12013",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)12036_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:109"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(License)12049_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10371": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)12013": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)14395": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)12049_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)12036_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)12049_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)12036_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "147b4a9281ef4b900810f1c8f04b31f9510e3bac33de5cfb23c339138826b118": {
      "address": "0x0D0B21F90711FC32b9af7a41F9fe192C4AE7F06E",
      "txHash": "0x474b0ca0643a25f502dba29f5f7f47388f26e71ba83e7260327ac28521345448",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)19479",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)17477",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)17506",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)17537_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)17477": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)17506": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)19479": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)17537_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)17537_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "fd22610659fb1e0fc89e236970cb7d092567283563e58c99ab0714de672b310c": {
      "address": "0x7f6a3D8Eb2109E82F4f5F9b342135B2A84B25C96",
      "txHash": "0x11b76c87885bd3800d5f751f9c4f587089ab889aba77fd3800f3f051edd16e9c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)14686",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10445",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)12094",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)12117_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)12130_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10445": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)12094": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)14686": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)12130_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)12117_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)12130_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)12117_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "84901212470353ad92660286b39db09bfe38a183e0ca9c6fc949aba075a3e44d": {
      "address": "0x64166a9aC49F0672Abb7A8d09896EBdff89f4c59",
      "txHash": "0x79c4743daa93f5df18d8ce48adb4beae62bb337ce04f00256ad4c5d0f6be8393",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13060",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10445",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10468",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10504_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10445": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10468": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13060": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10504_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10504_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10491_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "1b5a7b4130d755eb7bf98fcb1eb300b9e2580abc5e5143b1d93262492a6019fa": {
      "address": "0x9420219EA1686B11F89C1AF49F34039b75BFb560",
      "txHash": "0xac5468832f9c255ffa9f844ed52b12165c1bda39cacbc56166ddcbc164802eea",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13064",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10445",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10468",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10504_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10445": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10468": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13064": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10504_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10504_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10491_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4e45e3945288b90e8c3849aac84e19204d7bc8cf545da06ef05d809b36e16c55": {
      "address": "0x0fFA3e2e67f195C661175aBaF08e7DE6575a610C",
      "txHash": "0x0596e33ef659467da25c0f22080e0633e181925297645b009cfc19f9f26361d8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22566",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18115",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18144",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18175_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18115": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18144": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22566": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18175_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18175_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "06c165a4b8840408819e83f3c43766d840f8d265c742365fb146f84f448ab0d4": {
      "address": "0x05f07f21bd69A63b52c2e2d27f2FeDb8FCCECB71",
      "txHash": "0x2d788016f54b2b41ce6a4ef70aaf623e4cd32a591127ad940c848206e99a65a0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13122",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13122": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "d85e23ef751c04e135e2019587d24c4086f4b10190be7241e5d82826d98943b0": {
      "address": "0x0C431e546371C87354714Fcc1a13365391A549E2",
      "txHash": "0x9f4c9b5475ae36903f64fd3036492ae7a54ab01545877bfc9952b0ec755afeaf",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22574",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18113",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18142",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18173_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18142": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22574": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18173_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18173_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4236b68bb8d8e92ee720c92a7335a60ab4743710476ce815fc71d75996355cbe": {
      "address": "0x233Ac4A5AD74174176ef333Cd76a764A1927B472",
      "txHash": "0x91e5c9072051a57ece17b3efc95a70816d56f64b75fca20870dde66fc647a2b8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)22721",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)18113",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)17646",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)17250",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)19966",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)19989_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)20002_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)19966": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)17250": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)17646": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22721": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20002_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)19989_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20002_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)19989_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "917314d8be882f458f6b5cff11b7acdee91ab0236ad769a97eac9a8c67227842": {
      "address": "0xB1011084C34A81845e439D7Db628129E7E3bE917",
      "txHash": "0x6c3978a838723491edbff96c65a2ca846d933922983e0ca93f5542b2ea7399d6",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13223",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13223": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5bf3fe9ec0c2fe544369a975c4becb01fab0cf6e3b5602118560cccaec70ff9d": {
      "address": "0x00bC78aA997AFFeF8188aC43A3e4D0C8Ce781F54",
      "txHash": "0xecd704311ac1ad898a0b45d1a14be60277b7798a5f9e56aef81bf67bb0fd31d0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13228",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13228": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
