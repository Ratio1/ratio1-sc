{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1B2e177DeCD7d1fDd2A7Bda84eD530cDD3f36E09",
    "txHash": "0xcacf8f33e5e5a98b9aa013e5437159e8b5ece3d9f6646a9769a45e80c5d213d3"
  },
  "proxies": [
    {
      "address": "0x911A520bB6a5F332377D6f24448d8B761Bc1d990",
      "txHash": "0xe65964202179e497dc6b971394741033f9eac2e48dc567e474fe72a654fda1d8",
      "kind": "transparent"
    },
    {
      "address": "0x3026e13534f0E9A49520445761F42577989F3D31",
      "txHash": "0x12975667b5b3e71bc5a58990bf2e29138383de2bfd3900087199b6f20f1fdffb",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8b3c51fb518d413a3e8e7a6cf43775bd0ed59e625747e2ecb3ae3268587199bd": {
      "address": "0x8FC0ea2C656f4AC2C33045FfCD1b5cFc128dCBc9",
      "txHash": "0x8bd241f99bb4c2cea9ec20014ecd2c1d603756e23735e12d4e8d504f7a063d54",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)14395",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10371",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)12013",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)12036_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:109"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(License)12049_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10371": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)12013": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)14395": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)12049_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)12036_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)12049_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)12036_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "147b4a9281ef4b900810f1c8f04b31f9510e3bac33de5cfb23c339138826b118": {
      "address": "0x0D0B21F90711FC32b9af7a41F9fe192C4AE7F06E",
      "txHash": "0x474b0ca0643a25f502dba29f5f7f47388f26e71ba83e7260327ac28521345448",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)19479",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)17477",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)17506",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)17537_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)17477": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)17506": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)19479": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)17537_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)17537_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "fd22610659fb1e0fc89e236970cb7d092567283563e58c99ab0714de672b310c": {
      "address": "0x7f6a3D8Eb2109E82F4f5F9b342135B2A84B25C96",
      "txHash": "0x11b76c87885bd3800d5f751f9c4f587089ab889aba77fd3800f3f051edd16e9c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)14686",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10445",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)12094",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)12117_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)12130_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10445": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)12094": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)14686": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)12130_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)12117_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)12130_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)12117_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
