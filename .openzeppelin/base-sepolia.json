{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1B2e177DeCD7d1fDd2A7Bda84eD530cDD3f36E09",
    "txHash": "0xcacf8f33e5e5a98b9aa013e5437159e8b5ece3d9f6646a9769a45e80c5d213d3"
  },
  "proxies": [
    {
      "address": "0x911A520bB6a5F332377D6f24448d8B761Bc1d990",
      "txHash": "0xe65964202179e497dc6b971394741033f9eac2e48dc567e474fe72a654fda1d8",
      "kind": "transparent"
    },
    {
      "address": "0x3026e13534f0E9A49520445761F42577989F3D31",
      "txHash": "0x12975667b5b3e71bc5a58990bf2e29138383de2bfd3900087199b6f20f1fdffb",
      "kind": "transparent"
    },
    {
      "address": "0xAb2F1F31489BAa339d58470737dD6E5d55484261",
      "txHash": "0x61b6a49c676d5935faa7cc7ed1c8ddd10d7204579fb833246874bdd8f4d2e0a9",
      "kind": "transparent"
    },
    {
      "address": "0xE658DF6dA3FB5d4FBa562F1D5934bd0F9c6bd423",
      "txHash": "0x31cfb84d2ce6e8a3ae0d77548f36b921ac67e791a0139cf583b3a1e1512177d8",
      "kind": "transparent"
    },
    {
      "address": "0x3814A2110f2269d773a90F5F24fdfE4cb89823ea",
      "txHash": "0x2c0f2a78a8e788dfc2eefb5d69f697fed528d7ff228e60e185518da2b0714974",
      "kind": "transparent"
    },
    {
      "address": "0x114f9995cc09cfc708533591cc93f2900Bb4997E",
      "txHash": "0xc45c43d18cbc1f0c7c2437e1695906b38b946706dfe35d2ea9430931195461c5",
      "kind": "transparent"
    },
    {
      "address": "0xa8d7FFCE91a888872A9f5431B4Dd6c0c135055c1",
      "txHash": "0x45fd113c197e252c0f5ed6e27256f52ddb8919eb796af5cd5b425cdadb6d307c",
      "kind": "transparent"
    },
    {
      "address": "0x18E86a5829CA1F02226FA123f30d90dCd7cFd0ED",
      "txHash": "0x26c5510ab00a785471fee6a35ad10da175a5738adc7b3d37450d980b224ca6df",
      "kind": "transparent"
    },
    {
      "address": "0x7A14Be75135a7ebdef99339CCc700C25Cda60c6E",
      "txHash": "0x68d839b2a2920853fe0a3d60ff52d476dfc6c210d9a35f3360b2dece169d941f",
      "kind": "transparent"
    },
    {
      "address": "0x8D0CE4933728FF7C04388f0bEcC9a45676E232F7",
      "txHash": "0xa78bcdf9375f21ac7226f28bd435ffc1e19dcab56815c88ecc042a51f11b9a10",
      "kind": "transparent"
    },
    {
      "address": "0x2c62a818967D3396b535De3d1EC47aF1f2B1282D",
      "txHash": "0xe14dcf8297b339e732a6eb23506b9a3417426f14d954fbd394ffd2ffe0962328",
      "kind": "transparent"
    },
    {
      "address": "0xd1c7Dca934B37FAA402EB2EC64F6644d6957bE3b",
      "txHash": "0xc470d95333dfc49a68c8abfdb4cb67e137176a5a7564d555db60d4045dd4381c",
      "kind": "transparent"
    },
    {
      "address": "0x17B8934dc5833CdBa1eF42D13D65D677C4727748",
      "txHash": "0xff0da2f6b597e3bb46623c9376945feb420cb06eba92b77ed381ea3d934a316d",
      "kind": "transparent"
    },
    {
      "address": "0x90025B92240E3070d5CdcB3f44D6411855c55a73",
      "txHash": "0x0a318009f452e26a1609780201d0b706cc2ee0da7b2052f57da2066b97f020b7",
      "kind": "transparent"
    },
    {
      "address": "0xFcF04c9A67330431Af75a546615E4881BD8bdC78",
      "txHash": "0xa888c0b73f94023250c43755936e56339ca1370f6a985fa698bfaf92f78b87e9",
      "kind": "transparent"
    },
    {
      "address": "0x9A41f43494fCD592577228fE8E4014f2D75d2aa3",
      "txHash": "0xbbac45b895375bdc964c79cd083ed1636061cc8683e60e76e14aaee9e1573827",
      "kind": "transparent"
    },
    {
      "address": "0x9EC8f75f30b0cc7d69dfF35b2A42D671Cfa9d31a",
      "txHash": "0xc757b95e42475b3f256aaa09fe5f83064113542abf0884a915929e7511858d82",
      "kind": "transparent"
    },
    {
      "address": "0xCc7C4e0f4f25b57807F34227Fb446E68c8c36ce5",
      "txHash": "0xfa92db2d2f24116e034a4bcc2ce1ee9290ddca1162be84ac8418d6c8702bcac1",
      "kind": "transparent"
    },
    {
      "address": "0x68f825aA8fD4Af498c2998F4b165F103080574d4",
      "txHash": "0x3ec3f1f8783da51babfd1f1df943f0cce9ad58645c31f092fa5d57020f8c52e6",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8b3c51fb518d413a3e8e7a6cf43775bd0ed59e625747e2ecb3ae3268587199bd": {
      "address": "0x8FC0ea2C656f4AC2C33045FfCD1b5cFc128dCBc9",
      "txHash": "0x8bd241f99bb4c2cea9ec20014ecd2c1d603756e23735e12d4e8d504f7a063d54",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)14395",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10371",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)12013",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)12036_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:109"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(License)12049_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10371": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)12013": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)14395": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)12049_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)12036_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)12049_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)12036_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "147b4a9281ef4b900810f1c8f04b31f9510e3bac33de5cfb23c339138826b118": {
      "address": "0x0D0B21F90711FC32b9af7a41F9fe192C4AE7F06E",
      "txHash": "0x474b0ca0643a25f502dba29f5f7f47388f26e71ba83e7260327ac28521345448",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)19479",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)17477",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)17506",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)17537_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)17477": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)17506": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)19479": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)17537_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)17537_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "fd22610659fb1e0fc89e236970cb7d092567283563e58c99ab0714de672b310c": {
      "address": "0x7f6a3D8Eb2109E82F4f5F9b342135B2A84B25C96",
      "txHash": "0x11b76c87885bd3800d5f751f9c4f587089ab889aba77fd3800f3f051edd16e9c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)14686",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10445",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)12094",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)12117_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)12130_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10445": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)12094": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)14686": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)12130_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)12117_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)12130_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)12117_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "84901212470353ad92660286b39db09bfe38a183e0ca9c6fc949aba075a3e44d": {
      "address": "0x64166a9aC49F0672Abb7A8d09896EBdff89f4c59",
      "txHash": "0x79c4743daa93f5df18d8ce48adb4beae62bb337ce04f00256ad4c5d0f6be8393",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13060",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10445",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10468",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10504_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10445": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10468": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13060": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10504_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10504_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10491_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "1b5a7b4130d755eb7bf98fcb1eb300b9e2580abc5e5143b1d93262492a6019fa": {
      "address": "0x9420219EA1686B11F89C1AF49F34039b75BFb560",
      "txHash": "0xac5468832f9c255ffa9f844ed52b12165c1bda39cacbc56166ddcbc164802eea",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13064",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10445",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10468",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10504_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10445": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10468": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13064": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10504_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10491_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10504_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10491_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4e45e3945288b90e8c3849aac84e19204d7bc8cf545da06ef05d809b36e16c55": {
      "address": "0x0fFA3e2e67f195C661175aBaF08e7DE6575a610C",
      "txHash": "0x0596e33ef659467da25c0f22080e0633e181925297645b009cfc19f9f26361d8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22566",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18115",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18144",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18175_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18115": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18144": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22566": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18175_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18175_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "06c165a4b8840408819e83f3c43766d840f8d265c742365fb146f84f448ab0d4": {
      "address": "0x05f07f21bd69A63b52c2e2d27f2FeDb8FCCECB71",
      "txHash": "0x2d788016f54b2b41ce6a4ef70aaf623e4cd32a591127ad940c848206e99a65a0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13122",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13122": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "d85e23ef751c04e135e2019587d24c4086f4b10190be7241e5d82826d98943b0": {
      "address": "0x0C431e546371C87354714Fcc1a13365391A549E2",
      "txHash": "0x9f4c9b5475ae36903f64fd3036492ae7a54ab01545877bfc9952b0ec755afeaf",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22661",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18113",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18142",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18173_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18142": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22661": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18173_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18173_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4236b68bb8d8e92ee720c92a7335a60ab4743710476ce815fc71d75996355cbe": {
      "address": "0x233Ac4A5AD74174176ef333Cd76a764A1927B472",
      "txHash": "0x91e5c9072051a57ece17b3efc95a70816d56f64b75fca20870dde66fc647a2b8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)22721",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)18113",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)17646",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)17250",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)19966",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)19989_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)20002_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)19966": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)17250": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)17646": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22721": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20002_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)19989_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20002_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)19989_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "917314d8be882f458f6b5cff11b7acdee91ab0236ad769a97eac9a8c67227842": {
      "address": "0xB1011084C34A81845e439D7Db628129E7E3bE917",
      "txHash": "0x6c3978a838723491edbff96c65a2ca846d933922983e0ca93f5542b2ea7399d6",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13223",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13223": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5bf3fe9ec0c2fe544369a975c4becb01fab0cf6e3b5602118560cccaec70ff9d": {
      "address": "0x00bC78aA997AFFeF8188aC43A3e4D0C8Ce781F54",
      "txHash": "0xecd704311ac1ad898a0b45d1a14be60277b7798a5f9e56aef81bf67bb0fd31d0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13228",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13228": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c83848f0d7ec3ac88ba43df7a7ca8164af009f6dcf10623d160129b7a6c1d99b": {
      "address": "0x46Aec93028c46a5Bc60eC02BEb5140fFD94375E1",
      "txHash": "0x3735e2a25c94349b37977c4c936f3c47ec9d171adf0ad4b5a790510bf4015d9c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)23157",
            "contract": "Reader",
            "src": "contracts/Reader.sol:73"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)23168",
            "contract": "Reader",
            "src": "contracts/Reader.sol:74"
          }
        ],
        "types": {
          "t_contract(IMND)23168": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)23157": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4b044ef171f0c18001e5e0021aefe34040e1d0129d3c468894d132cebe652387": {
      "address": "0x808165C342276096e6329AEb6942816660307694",
      "txHash": "0xafc2b3d4eb612c8a943aead2bb1373f2e4342cfe1a7446901356fe1dc085c765",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22763",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18113",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18142",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18173_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18142": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22763": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18173_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18173_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3466a59a84263e7a1c17c194b751e649c09236452993cae612a7bac566436326": {
      "address": "0xE7E33190538568C49F7A1824efB48f6E70b3dFd8",
      "txHash": "0xdb579bbed949ce6756786883c495c65b3c373849b2d7f633c1d7e7f511c6e1ff",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)22763",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)18113",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)17646",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)17250",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)19996",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)20019_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)20032_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)19996": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)17250": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)17646": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22763": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20032_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)20019_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20032_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)20019_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "881cc6d12260d248902448533ffe6149d46d9af13354c6efd5752dd4f5ed978d": {
      "address": "0xd5C647A9A755C5161464637a0AEd12Ed7cDB6258",
      "txHash": "0xbbe9312b7f25dcc2a997f47df70cad6f54bc208cc4c18f5a7c7f8f79c3834369",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)22969",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)18113",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)17646",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)17250",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)20132",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)20155_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)20168_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)20132": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)17250": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)17646": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22969": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20168_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)20155_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20168_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)20155_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "aa897b5143ebf53d087765a40d18e36cbe1c972ee045350ae37d12aaaa7e0f72": {
      "address": "0xE70886DD38518c62464fbAF6C398f71e7b8Bb849",
      "txHash": "0x9e9bb7d4b09adb0215cbdc188a30b8c9fef485c698ffaf390761dca964a05d52",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22954",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18113",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18142",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18173_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18142": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22954": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18173_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18173_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "adf994690adf7df029d9f54b71fe1386d3139822748e6a5a57c6e8a263be8d5c": {
      "address": "0xb459C1763C38CE25Fa609aC522Bfaf0473d53FD1",
      "txHash": "0xbf2d8ee9ac6602a8601bed2274879d2f1069ba863d32d5e2f1d4916f4aa2e8a6",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13303",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13303": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "86a9a0c93f5a63661537bcdad75d4a927bc6d9a0a15de52d9d0eebfb2b21fa49": {
      "address": "0x92989f72D7Daa45168f24d073363a6801A8fF996",
      "txHash": "0x1d25199bcceecf362c6948ca52576bbb152a5168d99c109791dd5883aae51138",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13235",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13235": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "71e4caa62482632e5d7c39060d89da5a172ad6b85697e11326c699b4a148339d": {
      "address": "0x12DFECcf9898cF0760F533A440e457061c6EaA0F",
      "txHash": "0xba7ff629987e5136e67beb67809078ba9cb24e4cc23a0489182cc3b9752895d6",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)19676",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)17475",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)17504",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)17535_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)17475": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)17504": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)19676": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)17535_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)17535_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "1f0096c67170280e5e29a7a62c41cfb157d6924fc54d533953c37da9482803aa": {
      "address": "0xf1Fac787Ab064BE3E7dD8126DC6be3C872eC5238",
      "txHash": "0x7fc94a591dd80fc577aadaf54ff0e3ca2c272bd4dc11417e535620c00109c5c2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)1373",
            "contract": "Reader",
            "src": "contracts/Reader.sol:80"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)1384",
            "contract": "Reader",
            "src": "contracts/Reader.sol:81"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)1260",
            "contract": "Reader",
            "src": "contracts/Reader.sol:82"
          }
        ],
        "types": {
          "t_contract(Controller)1260": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)1384": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)1373": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "0e334d7ba8d2b92184eda7cac57466dfbfa363e2bda47367a9c43161e1271636": {
      "address": "0x810D54F96D23effBE3E36aAB00FfeE3A0794D9A7",
      "txHash": "0x704926fde17df51fbe20f4b189f6c83407868d4c04744b6694751da1288cb2c2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22969",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18113",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18142",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18173_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18142": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22969": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18173_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18173_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "ac1d2f05b255028ad0c15b2497f1c46c3748bf1223f526f84cef94148e3d247b": {
      "address": "0xc1fB57575F41196B399697CAb9A14755aac03024",
      "txHash": "0xf8eb3bbbc02910eb57fbe623c7738221e81308b2521a2e76a40b302fdcee7c86",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)23082",
            "contract": "Reader",
            "src": "contracts/Reader.sol:80"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)23093",
            "contract": "Reader",
            "src": "contracts/Reader.sol:81"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)18113",
            "contract": "Reader",
            "src": "contracts/Reader.sol:82"
          }
        ],
        "types": {
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)23093": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)23082": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3e78e6f174909af5de8b76c925d7954f479842f5e6b9a4c01b28d6a8a01f693a": {
      "address": "0xb25d0821B0149325435d88c07D2F44318711d044",
      "txHash": "0x7e07b6a17a10c920b1e10823a098a4ee46cce83c03d671ee374bb669ec3011b5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)2456",
            "contract": "Reader",
            "src": "contracts/Reader.sol:87"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)2467",
            "contract": "Reader",
            "src": "contracts/Reader.sol:88"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)2115",
            "contract": "Reader",
            "src": "contracts/Reader.sol:89"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)2335",
            "contract": "Reader",
            "src": "contracts/Reader.sol:90"
          }
        ],
        "types": {
          "t_contract(Controller)2115": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)2467": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)2456": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)2335": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "d779bc798d0805ec3dd1d66085bdddd823b5187efd12687de185d648f159a09b": {
      "address": "0xdd3be65c58Ef3dDdDA56DA7244113CEF58E39513",
      "txHash": "0x7c74308a55f32affdb692b9dacb48776d688c603e96efc9c5aa9c38f7c4cd0aa",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:64"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5050",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:65"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5060",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:66"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:67"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:68"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:69"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:70"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:71"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:73"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:76"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:78"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:80"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5068_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5068_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5060": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5050": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5068_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5068_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5068_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "6ee805e8402c6b8bea54ac18f5414561ffdb07c6bd167c247a5b9918540e538f": {
      "address": "0x5ABfc0aA12B5E9578B08CD9aF9Ca7659C924d2bf",
      "txHash": "0x5facbcf6bda54ec06f759d584fdef04579a2e1a138b10f568cdf096b01fcbd42",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:65"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5160",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:66"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5170",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:67"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:68"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:69"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:70"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:71"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:72"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:74"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:77"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:79"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:81"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5178_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5178_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5170": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5160": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5178_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5178_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5178_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "591c5cf42c3588f2dae3b268664bd876720412b722864053a9c9b1eecfae9b14": {
      "address": "0xcBD9bf8F1C429FAD1B687c6410E0c9F4Ca3D6189",
      "txHash": "0xa4dd8be06b99149aa6b5ed9a05937be3c133087dbf12ee92f161edfd4ab61564",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:81"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5245",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5255",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:86"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5263_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5263_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5255": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5245": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5263_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5263_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5263_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "89160d7ad19e1d2d53f053594e15b5097b4aee0e390c47c85eb407ec1d49de47": {
      "address": "0xd5143AaeDE2Ebf024BeF1aE2e0b286812287BCF6",
      "txHash": "0x2f1aa5717d56a48cdf0cac20788c8242a0a40dd482512d83f98366040859b62f",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5266",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:86"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:110"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5266": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5256": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5274_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "54eb59cf3bc860f8d2b6c69317094c0ba80755c308ed607839cac2849ebb24cb": {
      "address": "0xaB5610430172891871F9B2Aee1b878E675a84798",
      "txHash": "0x3036ec0a571fdecbe7e106acb9757ac75c27c0ddfb37ea240c14a7de6ffd6bdc",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25164",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25174",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:86"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:110"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25174": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25164": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25182_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "0daf4e2e02c8a2932d713348bd420d73932cd9c7cf73b75fb91a10f6d8f8bbf9": {
      "address": "0x9dE91764f26c3cf588E2fDD5D685fd35787E870A",
      "txHash": "0xc6fa74f8e19d023d4084f5a82bbb40c2bc3c72c865ebc273c3e9d97aae0519fd",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5266",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:86"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:110"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5266": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5256": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5274_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5274_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "b20a68b3a461a7fe0fefa8b993f5aaeeb741bc1447f4fcec9bff020ba023e1f5": {
      "address": "0x7D43DEa80B11FA75422FEFEA772E3a6Ad6719816",
      "txHash": "0x072ca9e1ce306486284540abd1848f6cb3347535178278a6cc5b4abc35ba759b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25351",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25361",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:111"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:115"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25361": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25351": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25369_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c7abe50927a4a472f05a54c18907a49d5e0f37e424e11d128db1df32b7f7bf67": {
      "address": "0xBb0c6fAc230133185bE53F26EbCFC5BCE49223aD",
      "txHash": "0x23338d4de86e44b2affd0ad511c2994e9b4206874604a8ff01c275ba41fe1c51",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)27213",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)22655",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)22678_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)22691_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)22655": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27213": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)22691_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)22678_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)22691_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)22678_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "9e4145358a1f53a9d76fc820484174bf7a2222de7a41589d594ff177a3f52bdc": {
      "address": "0x249B50Fd98D38AAc78fdae052a7fEF5dcC538080",
      "txHash": "0x0d05b5f75a4f9d5d60864786d8deb202bcd561bc0d90363d8b5ea888e217c298",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25351",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25361",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:111"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:115"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25361": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25351": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25369_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25369_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "0fb3f899c7ed64ffce1862f72ffa61da511a62e2e8f41c4d82806cc783376425": {
      "address": "0x408DcF27C19E65f83cF041FE30D61E894BC95f8d",
      "txHash": "0x38635195aff7c81ec90e76f10112d5b9defdee49f16dc1556f7c835f20ac6662",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5443",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5453",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5461_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:111"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:115"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:119"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5461_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5453": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5443": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5461_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5461_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5461_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "e56f76df251fd027cefa1e22bad81f366b98b90c1c473c94565cbb4d41fa79de": {
      "address": "0x513CA58133038203f28e89b5E1d94e88BDd7f6E5",
      "txHash": "0x87268266a2a95708523610dfdedacd3479cd5769b7cab718645cf1726e22fb8a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)27990",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:109"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)23115",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:116"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)23148_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)23161_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:122"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:123"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:125"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:126"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:127"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:128"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:129"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "22",
            "type": "t_contract(IPoAIManager)23125",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)23115": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)23125": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27990": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)23161_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)23148_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)23161_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)23148_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "8ef31c9f2701a1d4698959c8d2a4c4a93164c407d26d9188e3dfd5f00f3ecab9": {
      "address": "0xc8d191Db35c496F19ad646d8c455589443E88562",
      "txHash": "0xb67727b3bc8f66bb6cb6b4acc1876d9c77f30f802644f53f741fc9511422c0f1",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)15607",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)15617",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)11356",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)15625_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)15625_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)11356": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)15617": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)15607": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)15625_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)15625_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)15625_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "f259f3e4c6614e18682b15af9391e79963c255be6dd4ec45cbbbdc0e573f9658": {
      "address": "0x1a0e4872D36D09F1d33f142488b8C418dc0bE16c",
      "txHash": "0x32e08031dac3aff7d237e1b624dd2719851ee9b4e6c5b37b4df271232bf2db52",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)2460",
            "contract": "Reader",
            "src": "contracts/Reader.sol:95"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)2471",
            "contract": "Reader",
            "src": "contracts/Reader.sol:96"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)2115",
            "contract": "Reader",
            "src": "contracts/Reader.sol:97"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)2335",
            "contract": "Reader",
            "src": "contracts/Reader.sol:98"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IPoAIManager)2481",
            "contract": "Reader",
            "src": "contracts/Reader.sol:99"
          }
        ],
        "types": {
          "t_contract(Controller)2115": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)2471": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)2460": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)2481": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(R1)2335": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "cf0fade926b2d43fe85f2e7764eacf3188cf7b6358b56571d152bea6dad44731": {
      "address": "0x2f91Cb6C9bAC5542ff5D2b2Dd2DB651a6B04e2c9",
      "txHash": "0x2ae29138feb1142fe2a975ab1529922d3ff6200d22223f6b9b288d678c078a03",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5444",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5454",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5454": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5444": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5462_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3a47cb38b7eeab47fd546e3f9acacd890b18d63bee8b04ca71f5f470a108ac1f": {
      "address": "0x19D7773e11b7183Df4310dd425ADda6AeE5dbdc1",
      "txHash": "0x0762dd888cf1eca63a4638fccd8a67c00fece3188bd4b58d1d0fc80860bcec44",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25345",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25355",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25355": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25345": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25363_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "0cd8f0aa2969bd6a9157f92589310a769c16d9a21f8ff40c26cc6911f327ca75": {
      "address": "0xE128B8DCbf8A9B76f10F2f20C76aAC2689cAD6c3",
      "txHash": "0x838f47d801be79b6f92a4f22388dd068a6b6f202c7071e94e8ff7fe482df030b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)28450",
            "contract": "Reader",
            "src": "contracts/Reader.sol:110"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)28461",
            "contract": "Reader",
            "src": "contracts/Reader.sol:111"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)19028",
            "contract": "Reader",
            "src": "contracts/Reader.sol:112"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)28297",
            "contract": "Reader",
            "src": "contracts/Reader.sol:113"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IPoAIManager)28471",
            "contract": "Reader",
            "src": "contracts/Reader.sol:114"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)28461": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)28450": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)28471": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28297": {
            "label": "contract R1",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4fbff52fbf268879f99a6f4ec239451e034bb2f5213ced72dd2d81afe99d7323": {
      "address": "0xc181D1053ac0dcD86c8816933e9814656cC950eC",
      "txHash": "0x2c05865a7c5e672586fc9008da8913347ccce335a1b6479820d3b20831347656",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)27496",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)19026",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)20665",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)20696_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)20665": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27496": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20696_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20696_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)15430": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "52e5d51dc0ddc1392f0a57d59439264c22800dbc7dfe43218e8d613bae4ee96a": {
      "address": "0x67893aB2703322d5Af2B0535fa04b138B445Fc0A",
      "txHash": "0x9add8cb0bb89a685864176da221b23ded4384541ca2094d014376bae9ca76697",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25412",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25422",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25430_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25430_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25422": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25412": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25430_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25430_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25430_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "b56c053d31c59628c16437a1c91963a7dcec590ee010201bbcddf149be51c134": {
      "address": "0x8e12C68b4C3aD0F2EAE7726292fD82209Df36b7C",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19173",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)27412",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19026",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19173": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27412": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19207_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      },
      "allAddresses": [
        "0x8e12C68b4C3aD0F2EAE7726292fD82209Df36b7C",
        "0x9500D768fdA2eD5A8004Da3296eb2A7E6d6B4AE2"
      ]
    },
    "519dc3dfd659fcd5d26106a6d408b90da8e3fd8c2f83b71c921d61883e5c850c": {
      "address": "0x7Aab057E36C90162008Ce3bc5482c1839788b27f",
      "txHash": "0x3168a0cc6f17629834f696ce534a24e6fa0b3d67e70a18e7cf33121e4f2ca01b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)27990",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)19026",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)21125",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)21156_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)21125": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27990": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)21156_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)21156_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)15430": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "8156477cb726344adc867a38ad72c3e92e2462868bb5d27ba8fc1779a6a104b8": {
      "address": "0x50EDad587C05C234a5ed5333595985C6f84BFd2E",
      "txHash": "0x9da66ab503033772561b96c71bde1b3ae3acea4296489882897ba08e89bd3be0",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25345",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25355",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25355": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25345": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25363_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "b5955f2afe5aa482afc0c1f75fbe575a9904542a61bfaa609b93bd9d07400e69": {
      "address": "0xb2CC0c1eFc729fa39395021f0e5dE0954C58A6a4",
      "txHash": "0x25c7af6a180fd87df766727b0e5c2444f02e07f4b348a3cb104c13c04ce67bda",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19173",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)27592",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19026",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19173": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27592": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19207_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "17d4664311a911f76ae0736b29cd6b4a7eb7e86bd5378c45dcfdc1539b3cf0cc": {
      "address": "0xF8e2A8bB2722FF9ae4DFfeDC4FAfd4DfBe14FAC9",
      "txHash": "0x3c989d760821f522a9b36c3956cc67978aebcaf1dc68e73dfa003a9cf500cf2b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25478",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25488",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25496_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25496_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25488": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25478": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25496_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25496_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25496_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "5b7c4168239b9ac9c85948dbc3609a0560dd58ef393e31eebe6a51359c27916c": {
      "address": "0xC3e754734f7DA1F0c97B5d523B36DebECF586E4E",
      "txHash": "0x697f101cad8273a0fdd390db965cb0ac53f8c304858d48eb8bcbf51e16285eaa",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19173",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)27649",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19026",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19173": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27649": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19207_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c21a0a333daf830cbc8bd738c9a3c1a0c8a92475fde6ae0a26a8d4c1a074636b": {
      "address": "0x45e418A235169287d5BEa074755B74846C145FaC",
      "txHash": "0x7e272533a3fe5d52004efc7a15ade116bc17fd3fba8963b71cf484589c26cbbe",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25506",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25516",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25524_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25524_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25516": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25506": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25524_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25524_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25524_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "133a2760099e48524e8d05ad9a6e48bf9a647e25aec6e676e5669420f48fbedd": {
      "address": "0x9F74E5891835C3079040839031F336E4621A9d52",
      "txHash": "0x7f4dfa7c530363e2639827738d8256fc4126bf00856c813adc88998e5b84ce8a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19173",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)27770",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19026",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19173": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27770": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19207_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "926579b88227f22642e03dff537dd228abea653ad2d22be16ed2a3ce74a0f1d2": {
      "address": "0xDE1CcB379cB84c0241dddb974ED37B5d2f8003d4",
      "txHash": "0xd2bc5a7ae9d2eb2c92a3b466f46ab7b533d61e657864bb64f47ac5f46c449e27",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19175",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)27992",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19028",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18561",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18165",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          },
          {
            "label": "closedJobs",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:115"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19175": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18165": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18561": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27992": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19209_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7e984b0d201fd7eb406ed0db9d6352a8d9615cfbadaaa9f3e3cbe9615dadbe47": {
      "address": "0x8A264526fDBaE16a48Ce16e806E9276E6B68312D",
      "txHash": "0x1ca55c5e3a39bed22d8cb4502d6030f67be7cc214dd3a7fd16029b322481ab44",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25805",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25815",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25815": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25805": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25823_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "ef82169e21aeba57683326444bf106bbc208d2410785836e239a46b291e231d1": {
      "address": "0xfd52d14504F255149aa11F7Da4EEcC76e9AB779f",
      "txHash": "0x5c93221eaa9740469c9e84e230d03ea1a17ccf02ac79d7d001aa83742ed6ad5e",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)15432",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)15432",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)15432",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)28301",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)19028",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)21250",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)21281_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)625_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)711_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)775_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)21250": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28301": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)21281_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_struct(License)21281_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_userDefinedValueType(SD59x18)15432": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:26",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e7da5ff7b0adc2d2d9c600e0377c9d79bb4a80b4b87754833e2b5be8b14dca2e": {
      "address": "0xddc491dEab9F1b86Bd9e7E24Bb8aE7Fb9f3E4bb7",
      "txHash": "0xe55ebf5922e7505cf90ca189d92a37cb05c1bdc8a2b79c58db3e3e3f13aeccc8",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)28301",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:109"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)18561",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)18165",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)23240",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:116"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)23273_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)23286_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:122"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:123"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:125"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:126"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:127"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:128"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:129"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "22",
            "type": "t_contract(IPoAIManager)23250",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)625_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)711_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)775_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)23240": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)23250": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18165": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18561": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28301": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)23286_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)23273_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_struct(License)23286_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)23273_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:26",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1c884b577d9974d95a995d9f49a48e99d496ab3b459b0e3ba9a81ec069c8d94c": {
      "address": "0xd31fF5DceD64619c6316F459330d84f4B8BBFC17",
      "txHash": "0x89cca987fcfee5b2c66c86338ce13183d01f67da3bc426f19340d3b2a798ea77",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25807",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25817",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25817": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25807": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25825_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2dba21e4c8d3370184e3993770a1b1ad20c0724186162a44b6b9dd2a32d0e67a": {
      "address": "0xCB5a8BB6C252f5046C99934bCAF7b95E08DCB0c9",
      "txHash": "0x2b64c7b7fc6e791fc0f921ac9104e438ccd0eee27ab173e6d7a34fbcd5da90a2",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19175",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)28146",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19028",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18561",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18165",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          },
          {
            "label": "closedJobs",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:115"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19175": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18165": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18561": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28146": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19209_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e6497b018dcd952b5079cfb72037186c53609bebb49b93ec744be332ad94ef45": {
      "address": "0x38e8A9EDF5811d160d51B9800BdAc73aC8b5efc1",
      "txHash": "0xc76acf0e1d54967a4ead0b21c0be134db527667f384da14a213a89c989f2930b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25931",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25941",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:109"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:113"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:119"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:121"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:124"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25941": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25931": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25949_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "891e3a046a346b3105c95f6762514346f340ca9b9bf76839546ebc9caf7bf77b": {
      "address": "0x644466a4BDb1f923D5681594A117DfF9c9b28883",
      "txHash": "0xb62e5df4f3f526b9dbdb6bddeebaa8d11ffbcae8478ec08cc89d23ba8d2710d3",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19175",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)28301",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19028",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18561",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18165",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          },
          {
            "label": "closedJobs",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:115"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19175": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18165": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18561": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28301": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19209_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6187102288a146410a8e883d0c798c0697f8a5bc486c5bac28f50b9b44b73964": {
      "address": "0xF10C57854447eC4DeBD901e033051291Be9274e0",
      "txHash": "0xdd72f42dee66f573c08514e6fdf348169aee4cdcdef0ede27ffb8685b67f0f40",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25931",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25941",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:109"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:113"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:119"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:121"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:124"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25941": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25931": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25949_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3b5f82f447a90f599242d8ae7298bce72d954a2871c78fd9ce31a8ea761295ee": {
      "address": "0xDFE788bE926C162578dEb9a64e23bB038410aE3E",
      "txHash": "0x673281a49f88f8322c6cfea1b22164a05b7adc1c708e193199f08e3196caf976",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25931",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25941",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:109"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:113"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:119"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:121"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:124"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25941": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25931": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25949_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c860a84e3f9e4e0ddacbeeb218789c9bf3d9d44cdd57b31be99d16f906ad342d": {
      "address": "0xF88dcBd9adEA7dADF998F6856b08d81eB32E2B1A",
      "txHash": "0xc73db11671aaa41986664cc0d9ae5e5298bbe35abf0ba08d7f6fcd04a7f1277b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25931",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25941",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:109"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:113"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:119"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:121"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:124"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25941": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25931": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25949_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ab60478587e2ac92c8d3ceac674982a61a42ee2227677b7ccfeee6837a32a9d3": {
      "address": "0xb19C37b8a32075099e6E6224564daA4539a99A15",
      "txHash": "0x1a31a7a6049cc52db15920bc8c29eddab8e0fd56034e2b6dbcc00292cbf21a82",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)28450",
            "contract": "Reader",
            "src": "contracts/Reader.sol:110"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)28461",
            "contract": "Reader",
            "src": "contracts/Reader.sol:111"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)19028",
            "contract": "Reader",
            "src": "contracts/Reader.sol:112"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)28297",
            "contract": "Reader",
            "src": "contracts/Reader.sol:113"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IPoAIManager)28471",
            "contract": "Reader",
            "src": "contracts/Reader.sol:114"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)28461": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)28450": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)28471": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28297": {
            "label": "contract R1",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c4f572442ff3e09b253968b71c7365df4b6bcaba0b5f71d90126f8eb71bab5bd": {
      "address": "0xcFABe3c4219EA79cF4F4b8b5Cd40506FdE20fD8C",
      "txHash": "0x122737199eeca60c0ba82cc9acac49911a645993cac8de208a1f13a099ad834c",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25935",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25945",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:109"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:111"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25953_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:115"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:119"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:121"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:123"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:126"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25953_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25945": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25935": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25953_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25953_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25953_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a1221b11aee638c8457a4cd6d2ea4810afaac9c8faac65b3f9d833314197b904": {
      "address": "0xf917e6f130D5233CB4Fd7c59D78C4C5DE03F5536",
      "txHash": "0x79a32104f651fc0bdcb3e3396c473ee380bd54dc80a7777d874489f82952fb68",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)28468",
            "contract": "Reader",
            "src": "contracts/Reader.sol:133"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)28479",
            "contract": "Reader",
            "src": "contracts/Reader.sol:134"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)19028",
            "contract": "Reader",
            "src": "contracts/Reader.sol:135"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)28301",
            "contract": "Reader",
            "src": "contracts/Reader.sol:136"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IPoAIManager)28496",
            "contract": "Reader",
            "src": "contracts/Reader.sol:137"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)28479": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)28468": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)28496": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28301": {
            "label": "contract R1",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
