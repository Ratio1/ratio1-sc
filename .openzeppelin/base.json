{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8cEa8b574FbF20B9D2548f357B9Bf6DeA5A2204A",
    "txHash": "0x9989b2bcded36a369159ca202b98e9939df181a791bcd7136dbae027197604d6"
  },
  "proxies": [
    {
      "address": "0x0C431e546371C87354714Fcc1a13365391A549E2",
      "txHash": "0xfa6f0456b38466635dcbe39582e82aee77d5c660acd62b2e00428746f884b402",
      "kind": "transparent"
    },
    {
      "address": "0xE658DF6dA3FB5d4FBa562F1D5934bd0F9c6bd423",
      "txHash": "0x66e9c1e52f669ff1c948681c6f1134d2208720f9323fe4d6e9d3414ae2c4e3d0",
      "kind": "transparent"
    },
    {
      "address": "0xa2fDD4c7E93790Ff68a01f01AA789D619F12c6AC",
      "txHash": "0x4c383c9887756784dbfdbf912736dfffedc2d217f16ce4fd4ec7ef8d01778418",
      "kind": "transparent"
    },
    {
      "address": "0xa8d7FFCE91a888872A9f5431B4Dd6c0c135055c1",
      "txHash": "0x2772c92f80d7d75125ad8bb1b562dd7a344a55546c8d8b2533d88414856bb87b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d85e23ef751c04e135e2019587d24c4086f4b10190be7241e5d82826d98943b0": {
      "address": "0x9964A5dfc860626c3b30FB764162773cD1D4Ad95",
      "txHash": "0x66dd83d1f6ee334c085df6ec95de49cced4b0e59db446566d4100249f5f27baa",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22661",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18113",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18142",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18173_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18142": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22661": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18173_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18173_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "06c165a4b8840408819e83f3c43766d840f8d265c742365fb146f84f448ab0d4": {
      "address": "0xAb2F1F31489BAa339d58470737dD6E5d55484261",
      "txHash": "0x03d16626a2b4c6d7873c0033e6f69ba57240f5867bd029686c5e6937aa324d22",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)13122",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)10443",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)9976",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)9580",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)10466",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)10502_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)10443": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)10466": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)9580": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)9976": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)13122": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)10502_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)10489_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)10502_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)10489_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c83848f0d7ec3ac88ba43df7a7ca8164af009f6dcf10623d160129b7a6c1d99b": {
      "address": "0xeaD1896801022aBaC2279c27de780342c6C4ce53",
      "txHash": "0xd015cb61e86b80e23963b2243d71c85b6c8c2d1616c18a7d33beac8014a1534b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)23157",
            "contract": "Reader",
            "src": "contracts/Reader.sol:73"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)23168",
            "contract": "Reader",
            "src": "contracts/Reader.sol:74"
          }
        ],
        "types": {
          "t_contract(IMND)23168": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)23157": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "4b044ef171f0c18001e5e0021aefe34040e1d0129d3c468894d132cebe652387": {
      "address": "0x3814A2110f2269d773a90F5F24fdfE4cb89823ea",
      "txHash": "0x1062fcd43812157d0cdca7b802b2e34a2febe815a9ff44d4edc2a8186ec0a172",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)22763",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)18113",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)18142",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)18173_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)18142": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22763": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)18173_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)18173_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3466a59a84263e7a1c17c194b751e649c09236452993cae612a7bac566436326": {
      "address": "0x114f9995cc09cfc708533591cc93f2900Bb4997E",
      "txHash": "0xcba6a6431887ac3f0b60824c56473209debdb3b9a447c71756e23eb7975b9eca",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)22763",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)18113",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)17646",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)17250",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)19996",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)20019_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)20032_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)19996": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)17250": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)17646": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22763": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20032_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)20019_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20032_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)20019_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "0e334d7ba8d2b92184eda7cac57466dfbfa363e2bda47367a9c43161e1271636": {
      "address": "0xdd310992bC85D187180911a0715a36F81F466C18",
      "txHash": "0xf823624828e6f7968f02fe6b61a38d08a46ceb7ee4f0f36b4ac6d035cee10f9a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)14517",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)19691",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)17475",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)17504",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)17535_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)17475": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)17504": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)19691": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)17535_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)17535_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)14517": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "881cc6d12260d248902448533ffe6149d46d9af13354c6efd5752dd4f5ed978d": {
      "address": "0x5EB909c9Cc5Ce16911542fbC8D16116B733f7093",
      "txHash": "0x039d5020f46a118a890b35c6cc633667d63f87bbc4db11e8c0771057f3dce472",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)22969",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)18113",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)17646",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)17250",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)20132",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)20155_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)20168_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)20132": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)17250": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)17646": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)22969": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20168_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)20155_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20168_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)20155_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "ac1d2f05b255028ad0c15b2497f1c46c3748bf1223f526f84cef94148e3d247b": {
      "address": "0x34a998B8B2a637aF2EC19d8F69617Ef699E46278",
      "txHash": "0x930e6227fcc76ea3fa1817cb464710977253fae01ebe58d583297d0a292409f7",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)23082",
            "contract": "Reader",
            "src": "contracts/Reader.sol:80"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)23093",
            "contract": "Reader",
            "src": "contracts/Reader.sol:81"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)18113",
            "contract": "Reader",
            "src": "contracts/Reader.sol:82"
          }
        ],
        "types": {
          "t_contract(Controller)18113": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)23093": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)23082": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "3e78e6f174909af5de8b76c925d7954f479842f5e6b9a4c01b28d6a8a01f693a": {
      "address": "0x2C87185961dd9f67623FA7F06caB1Bf5f1C980F7",
      "txHash": "0x32bd3ff85d40361791333adaf2dd2c5e755bf06b7edde5a2cc451fc27b9e2a95",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)2456",
            "contract": "Reader",
            "src": "contracts/Reader.sol:87"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)2467",
            "contract": "Reader",
            "src": "contracts/Reader.sol:88"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)2115",
            "contract": "Reader",
            "src": "contracts/Reader.sol:89"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)2335",
            "contract": "Reader",
            "src": "contracts/Reader.sol:90"
          }
        ],
        "types": {
          "t_contract(Controller)2115": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)2467": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)2456": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)2335": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "54eb59cf3bc860f8d2b6c69317094c0ba80755c308ed607839cac2849ebb24cb": {
      "address": "0xCC96f389F45Fc08b4fa8e2bC4C7DA9920292ec64",
      "txHash": "0x2facbbb633e25e0f34a1e32e1b24ba5da40405e28efc70cffdd6b31f00d0ebeb",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25164",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25174",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:86"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:110"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25174": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25164": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25182_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25182_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "c7abe50927a4a472f05a54c18907a49d5e0f37e424e11d128db1df32b7f7bf67": {
      "address": "0x18E86a5829CA1F02226FA123f30d90dCd7cFd0ED",
      "txHash": "0x3814c2a603fadb0065686119278f3fde79627c3c44b4924a7b111f5294cf81c9",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:96"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:97"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:98"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)26618",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:100"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:101"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:102"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:103"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)22468",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:107"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)22491_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)22504_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:117"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)22468": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)26618": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)22504_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)22491_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)22504_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)22491_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "0daf4e2e02c8a2932d713348bd420d73932cd9c7cf73b75fb91a10f6d8f8bbf9": {
      "address": "0xF94b53855Fde16cbF3f9C3e300e2E6A495AE0A0A",
      "txHash": "0x6bee6aff1a104aa5e967e1830d098841c8eb2dde50883de0f6319d2bba40e208",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5411",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5421",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:86"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5429_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:110"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5429_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5421": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5411": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5429_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5429_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5429_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "f4b958f305503bcd5c95d758d0e57f12816ecf9cbb87f74cb94587055c13958e": {
      "address": "0x7A14Be75135a7ebdef99339CCc700C25Cda60c6E",
      "txHash": "0x871ec6e0a4825c7a5ed6eac948f864ef789fdc4e0d4b1fa0a25f8237f2265bcf",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:82"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)15653",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:83"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)15663",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:84"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)11356",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:85"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:86"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:87"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)15671_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:110"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)15671_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)11356": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)15663": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)15653": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)15671_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)15671_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)15671_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "e56f76df251fd027cefa1e22bad81f366b98b90c1c473c94565cbb4d41fa79de": {
      "address": "0x8D0CE4933728FF7C04388f0bEcC9a45676E232F7",
      "txHash": "0xdf006a09c13dbeb7ca354fcb738828e8ea0054760dfd15cbcd6df9399af35065",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)27990",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:109"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)23115",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:116"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)23148_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)23161_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:122"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:123"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:125"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:126"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:127"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:128"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:129"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "22",
            "type": "t_contract(IPoAIManager)23125",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)23115": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)23125": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27990": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)23161_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)23148_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)23161_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)23148_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "8ef31c9f2701a1d4698959c8d2a4c4a93164c407d26d9188e3dfd5f00f3ecab9": {
      "address": "0x746aaB0a8bcFB92094Acc371D7D6A2F69DaA23E3",
      "txHash": "0x945d2edcbef7a48097423c08b5ae6fb5faeef2986c8aa177ac43a1b849581fec",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)1300",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)5444",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)5454",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)3907",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)3907": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)5454": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)5444": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)1300": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)5462_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)5462_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "f259f3e4c6614e18682b15af9391e79963c255be6dd4ec45cbbbdc0e573f9658": {
      "address": "0x3C5D9268fc5FFc065A1f601132b673Ee93f2219B",
      "txHash": "0x559c50fa7ecbe1ae93556121b341d218645517bd5fce684fa271f1c0e9f1543b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)2460",
            "contract": "Reader",
            "src": "contracts/Reader.sol:95"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)2471",
            "contract": "Reader",
            "src": "contracts/Reader.sol:96"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)2115",
            "contract": "Reader",
            "src": "contracts/Reader.sol:97"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)2335",
            "contract": "Reader",
            "src": "contracts/Reader.sol:98"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IPoAIManager)2481",
            "contract": "Reader",
            "src": "contracts/Reader.sol:99"
          }
        ],
        "types": {
          "t_contract(Controller)2115": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)2471": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)2460": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)2481": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(R1)2335": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "0cd8f0aa2969bd6a9157f92589310a769c16d9a21f8ff40c26cc6911f327ca75": {
      "address": "0x1Fe9362443816c7442BeaBaCBB5c93E1b924C06e",
      "txHash": "0x599474412f9070cb0717c6154c6c4c3169ec5e4aa784f060eb53a1fac502dcd0",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IND)28593",
            "contract": "Reader",
            "src": "contracts/Reader.sol:110"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IMND)28604",
            "contract": "Reader",
            "src": "contracts/Reader.sol:111"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(Controller)19028",
            "contract": "Reader",
            "src": "contracts/Reader.sol:112"
          },
          {
            "label": "r1Contract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)28440",
            "contract": "Reader",
            "src": "contracts/Reader.sol:113"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IPoAIManager)28614",
            "contract": "Reader",
            "src": "contracts/Reader.sol:114"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)28604": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)28593": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)28614": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28440": {
            "label": "contract R1",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b56c053d31c59628c16437a1c91963a7dcec590ee010201bbcddf149be51c134": {
      "address": "0x151856d5778E21854D50764815c941C71835A90b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19173",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)27412",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19026",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18559",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18163",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19173": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18163": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18559": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27412": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19207_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19207_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_bool": {
            "label": "bool"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "519dc3dfd659fcd5d26106a6d408b90da8e3fd8c2f83b71c921d61883e5c850c": {
      "address": "0x120d47898F7506667720d58d42Afa05bad13c547",
      "txHash": "0x6ee7271abd46b21b6a2037a67b2d252556c265a7e065878ca846db62ebfb8e7d",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)15430",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)27412",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)19026",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)20665",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)20696_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)20665": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27412": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)20696_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(License)20696_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_userDefinedValueType(SD59x18)15430": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "8156477cb726344adc867a38ad72c3e92e2462868bb5d27ba8fc1779a6a104b8": {
      "address": "0x6eaA4Fbadcae57094fE551b05382a29b1a6190A0",
      "txHash": "0xcc36e082d3fbbc78e506da7816b3a9293c987b442c33c1653d14524f6f62bd79",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25345",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25355",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25355": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25345": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25363_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25363_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "926579b88227f22642e03dff537dd228abea653ad2d22be16ed2a3ce74a0f1d2": {
      "address": "0xc181D1053ac0dcD86c8816933e9814656cC950eC",
      "txHash": "0x9833e8be59e6252e3969d83421a146a2f2a737dd4ab20cecc6ef034eaab267e9",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19175",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)27992",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19028",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18561",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18165",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          },
          {
            "label": "closedJobs",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:115"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19175": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18165": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18561": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27992": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19209_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7e984b0d201fd7eb406ed0db9d6352a8d9615cfbadaaa9f3e3cbe9615dadbe47": {
      "address": "0x67893aB2703322d5Af2B0535fa04b138B445Fc0A",
      "txHash": "0x60ac05ab511d5f9b776bd2fd5712aba86e946c80dd2efa74e3217a148c12002a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3395",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25805",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25815",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19026",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19026": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25815": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25805": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3395": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25823_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25823_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    },
    "ef82169e21aeba57683326444bf106bbc208d2410785836e239a46b291e231d1": {
      "address": "0x7Aab057E36C90162008Ce3bc5482c1839788b27f",
      "txHash": "0xcc2ae947a12b92d64f127b4ec639e9308998188c4e1466b476c83912de50456a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "LOGISTIC_PLATEAU",
            "offset": 0,
            "slot": "0",
            "type": "t_userDefinedValueType(SD59x18)15432",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:75"
          },
          {
            "label": "K",
            "offset": 0,
            "slot": "1",
            "type": "t_userDefinedValueType(SD59x18)15432",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:76"
          },
          {
            "label": "MID_PRC",
            "offset": 0,
            "slot": "2",
            "type": "t_userDefinedValueType(SD59x18)15432",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:77"
          },
          {
            "label": "_supply",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:93"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:94"
          },
          {
            "label": "_R1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(R1)27992",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:96"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(Controller)19028",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:97"
          },
          {
            "label": "_ndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IND)21127",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:98"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:99"
          },
          {
            "label": "expensesWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:100"
          },
          {
            "label": "marketingWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:101"
          },
          {
            "label": "grantsWallet",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:102"
          },
          {
            "label": "csrWallet",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:103"
          },
          {
            "label": "totalLicensesAssignedTokensAmount",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:105"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(License)21158_storage)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:106"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:107"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:108"
          },
          {
            "label": "initiatedTransferReceiver",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_address)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:110"
          },
          {
            "label": "initiatedBurn",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MNDContract",
            "src": "contracts/MNDContract.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)625_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)711_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)775_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IND)21127": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27992": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)21158_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_struct(License)21158_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalAssignedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "firstMiningEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_userDefinedValueType(SD59x18)15432": {
            "label": "SD59x18",
            "numberOfBytes": "32",
            "underlying": "t_int256"
          },
          "t_int256": {
            "label": "int256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:26",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e7da5ff7b0adc2d2d9c600e0377c9d79bb4a80b4b87754833e2b5be8b14dca2e": {
      "address": "0x50EDad587C05C234a5ed5333595985C6f84BFd2E",
      "txHash": "0x133af85394acd8e562c599339478d91e2566d6c340d56d040e9d953220f185b8",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_supply",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:104"
          },
          {
            "label": "_baseTokenURI",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:105"
          },
          {
            "label": "currentPriceTier",
            "offset": 0,
            "slot": "2",
            "type": "t_uint8",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:106"
          },
          {
            "label": "_R1Token",
            "offset": 1,
            "slot": "2",
            "type": "t_contract(R1)27992",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:108"
          },
          {
            "label": "_controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:109"
          },
          {
            "label": "_uniswapV2Router",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IUniswapV2Router02)18561",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:110"
          },
          {
            "label": "_uniswapV2Pair",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Pair)18165",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:111"
          },
          {
            "label": "_usdcAddr",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:112"
          },
          {
            "label": "_mndContract",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IMND)23117",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:113"
          },
          {
            "label": "lpWallet",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:114"
          },
          {
            "label": "companyWallet",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:115"
          },
          {
            "label": "vatReceiverWallet",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:116"
          },
          {
            "label": "_priceTiers",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint8,t_struct(PriceTier)23150_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:118"
          },
          {
            "label": "licenses",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(License)23163_storage)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:119"
          },
          {
            "label": "registeredNodeAddresses",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:120"
          },
          {
            "label": "nodeToLicenseId",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:121"
          },
          {
            "label": "userUsdMintedAmount",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:122"
          },
          {
            "label": "usedInvoiceUUIDs",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:123"
          },
          {
            "label": "lastLicensePrice",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:125"
          },
          {
            "label": "lastLicensePriceTier",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:126"
          },
          {
            "label": "maxAllowedPriceDifference",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:127"
          },
          {
            "label": "lastLicensePriceTimestamp",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:128"
          },
          {
            "label": "directAddLpPercentage",
            "offset": 0,
            "slot": "21",
            "type": "t_uint256",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:129"
          },
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "22",
            "type": "t_contract(IPoAIManager)23127",
            "contract": "NDContract",
            "src": "contracts/NDContract.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)489_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)625_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)711_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)775_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)23117": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)23127": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18165": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18561": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)27992": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(License)23163_storage)": {
            "label": "mapping(uint256 => struct License)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_struct(PriceTier)23150_storage)": {
            "label": "mapping(uint8 => struct PriceTier)",
            "numberOfBytes": "32"
          },
          "t_struct(License)23163_storage": {
            "label": "struct License",
            "members": [
              {
                "label": "nodeAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalClaimedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastClaimEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "assignTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastClaimOracle",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isBanned",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PriceTier)23150_storage": {
            "label": "struct PriceTier",
            "members": [
              {
                "label": "usdPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "soldUnits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:26",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1c884b577d9974d95a995d9f49a48e99d496ab3b459b0e3ba9a81ec069c8d94c": {
      "address": "0xb2CC0c1eFc729fa39395021f0e5dE0954C58A6a4",
      "txHash": "0x46790a06129d275cb19c72a167009bb3a1d5feb4185dd7dfa38fc2b481757022",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:88"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25807",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25817",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:97"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:100"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:102"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:104"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:106"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:108"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:112"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:116"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:118"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:120"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:123"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25817": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25807": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25825_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25825_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "891e3a046a346b3105c95f6762514346f340ca9b9bf76839546ebc9caf7bf77b": {
      "address": "0xF8e2A8bB2722FF9ae4DFfeDC4FAfd4DfBe14FAC9",
      "txHash": "0x56bf54c65b0b1759dfbfce8fd75c00d72d49f89cd254df33d3097b3fbc67bb53",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "poaiManager",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPoAIManager)19175",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:103"
          },
          {
            "label": "cspOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:104"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:105"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(R1)28440",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:106"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(Controller)19028",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:107"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IUniswapV2Router02)18561",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:108"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(IUniswapV2Pair)18165",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:109"
          },
          {
            "label": "jobDetails",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:111"
          },
          {
            "label": "virtualWalletBalance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:112"
          },
          {
            "label": "activeJobs",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:114"
          },
          {
            "label": "closedJobs",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "CspEscrow",
            "src": "contracts/CspEscrow.sol:115"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IPoAIManager)19175": {
            "label": "contract IPoAIManager",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Pair)18165": {
            "label": "contract IUniswapV2Pair",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)18561": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(R1)28440": {
            "label": "contract R1",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(JobDetails)19209_storage)": {
            "label": "mapping(uint256 => struct JobDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(JobDetails)19209_storage": {
            "label": "struct JobDetails",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "projectHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "requestTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastNodesChangeTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "jobType",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "pricePerEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastExecutionEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "numberOfNodesRequested",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balance",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastAllocatedEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "activeNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3b5f82f447a90f599242d8ae7298bce72d954a2871c78fd9ce31a8ea761295ee": {
      "address": "0xC3e754734f7DA1F0c97B5d523B36DebECF586E4E",
      "txHash": "0x38b038736e2fc9bd9496d3932094b052e90f67a24cb3d3984c196fdc5cd951a9",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "cspEscrowBeacon",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpgradeableBeacon)3397",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:89"
          },
          {
            "label": "ndContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IND)25931",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:90"
          },
          {
            "label": "mndContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IMND)25941",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:91"
          },
          {
            "label": "controller",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(Controller)19028",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:92"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:93"
          },
          {
            "label": "r1Token",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:94"
          },
          {
            "label": "uniswapV2Router",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:95"
          },
          {
            "label": "uniswapV2Pair",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:96"
          },
          {
            "label": "nextJobId",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:98"
          },
          {
            "label": "lastAllocatedEpoch",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:99"
          },
          {
            "label": "allEscrows",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:101"
          },
          {
            "label": "ownerToEscrow",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:103"
          },
          {
            "label": "escrowToOwner",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:105"
          },
          {
            "label": "jobIdToEscrow",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:107"
          },
          {
            "label": "nodeToEscrowsWithRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:109"
          },
          {
            "label": "nodesTransactionProposals",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:113"
          },
          {
            "label": "unvalidatedJobIds",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:117"
          },
          {
            "label": "isJobUnvalidated",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:119"
          },
          {
            "label": "jobConsensusTimestamp",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:121"
          },
          {
            "label": "hasReconciled",
            "offset": 0,
            "slot": "19",
            "type": "t_bool",
            "contract": "PoAIManager",
            "src": "contracts/PoAIManager.sol:124"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage": {
            "label": "struct NodesTransitionProposal[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Controller)19028": {
            "label": "contract Controller",
            "numberOfBytes": "20"
          },
          "t_contract(IMND)25941": {
            "label": "contract IMND",
            "numberOfBytes": "20"
          },
          "t_contract(IND)25931": {
            "label": "contract IND",
            "numberOfBytes": "20"
          },
          "t_contract(UpgradeableBeacon)3397": {
            "label": "contract UpgradeableBeacon",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct NodesTransitionProposal[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(NodesTransitionProposal)25949_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct NodesTransitionProposal[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(NodesTransitionProposal)25949_storage": {
            "label": "struct NodesTransitionProposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newActiveNodes",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "newActiveNodesHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
